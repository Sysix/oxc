---
source: crates/oxc_linter/src/tester.rs
snapshot_kind: text
---
  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:40]
 1 │ class A extends null { constructor() { super(); } }
   ·                                        ───┬───
   ·                                           ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:24]
 1 │ class A extends null { constructor() { } }
   ·                        ───────────
   ╰────

  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:39]
 1 │ class A extends 100 { constructor() { super(); } }
   ·                                       ───┬───
   ·                                          ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:42]
 1 │ class A extends 'test' { constructor() { super(); } }
   ·                                          ───┬───
   ·                                             ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:43]
 1 │ class A extends (B = 5) { constructor() { super(); } }
   ·                                           ───┬───
   ·                                              ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:44]
 1 │ class A extends (B && 5) { constructor() { super(); } }
   ·                                            ───┬───
   ·                                               ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:45]
 1 │ class A extends (B &&= 5) { constructor() { super(); } }
   ·                                             ───┬───
   ·                                                ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:44]
 1 │ class A extends (B += C) { constructor() { super(); } }
   ·                                            ───┬───
   ·                                               ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:44]
 1 │ class A extends (B -= C) { constructor() { super(); } }
   ·                                            ───┬───
   ·                                               ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:45]
 1 │ class A extends (B **= C) { constructor() { super(); } }
   ·                                             ───┬───
   ·                                                ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:44]
 1 │ class A extends (B |= C) { constructor() { super(); } }
   ·                                            ───┬───
   ·                                               ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Unexpected 'super()' because 'super' is not a constructor
   ╭─[constructor_super.tsx:1:44]
 1 │ class A extends (B &= C) { constructor() { super(); } }
   ·                                            ───┬───
   ·                                               ╰── Remove this 'super()' call expression
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { for (var a of b) super.foo(); } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { for (var i = 1; i < 10; i++) super.foo(); } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { var c = class extends D { constructor() { super(); } } } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { var c = () => super(); } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { class C extends D { constructor() { super(); } } } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { var C = class extends D { constructor() { super(); } } } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:66]
 1 │ class A extends B { constructor() { super(); class C extends D { constructor() { } } } }
   ·                                                                  ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:72]
 1 │ class A extends B { constructor() { super(); var C = class extends D { constructor() { } } } }
   ·                                                                        ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { if (a) super(); } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { if (a); else super(); } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { a && super(); } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Lacked a call of 'super()' in some code paths.
   ╭─[constructor_super.tsx:1:37]
 1 │ class A extends B { constructor() { switch (a) { case 0: super(); } } }
   ·                                     ───────────────┬───────────────
   ·                                                    ╰── This path is lacking of a 'super()' call
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { switch (a) { case 0: break; default: super(); } } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { try { super(); } catch (err) {} } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor() { try { a; } catch (err) { super(); } } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:1:21]
 1 │ class A extends B { constructor(a) { while (a) super(); } }
   ·                     ───────────
   ╰────

  ⚠ eslint(constructor-super): Lacked a call of 'super()' in some code paths.

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:2:20]
 1 │ class Foo extends Bar {
 2 │                             constructor() {
   ·                             ───────────
 3 │                                 for (a in b) for (c in d);
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:3:20]
 2 │             
 3 │                             constructor() {
   ·                             ───────────
 4 │                                 do {
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:3:20]
 2 │             
 3 │                             constructor() {
   ·                             ───────────
 4 │                                 for (let i = 1;;i++) {
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:3:20]
 2 │             
 3 │                             constructor() {
   ·                             ───────────
 4 │                                 do {
   ╰────

  ⚠ eslint(constructor-super): Expected to call 'super()'
   ╭─[constructor_super.tsx:3:20]
 2 │             
 3 │                             constructor() {
   ·                             ───────────
 4 │                                 while (foo) {
   ╰────
